"use strict";exports.id=668,exports.ids=[668],exports.modules={668:(a,b,c)=>{c.d(b,{eY:()=>x,l4:()=>C,rh:()=>p});var d=c(70891),e=c(29021),f=c.n(e),g=c(33873),h=c.n(g),i=c(13029);let j="https://pubchem.ncbi.nlm.nih.gov/rest/pug",k=/^\d{2,7}-\d{2}-\d$/;async function l(a){let b="number"==typeof a||/^\d+$/.test(String(a))?`cid/${a}`:encodeURIComponent(String(a)),c=async a=>{let c=`https://cactus.nci.nih.gov/chemical/structure/${b}/file${a?"?format=sdf&get3d=true":"?format=sdf"}`,e=await (0,d.Ay)(c,{headers:{"User-Agent":"moleculens/1.0"}});if(404===e.status||!e.ok&&500!==e.status)return null;let f=await e.text();return m(f)?f:null},e=await c(!0);return e||(e=await c(!1)),e}function m(a){let b=a.slice(0,400).toUpperCase();return!b.includes(" 2D")&&(!!(b.includes(" 3D")||b.includes(" V3000"))||a.split(/\n/).slice(4,30).some(a=>{let b=parseFloat(a.slice(20,30));return!Number.isNaN(b)&&Math.abs(b)>.001}))}async function n(a){let b=await (0,d.Ay)(`${j}/compound/cid/${a}/synonyms/JSON`,{headers:{"User-Agent":"moleculens/1.0"}});if(!b.ok)return null;let c=(await b.json())?.InformationList?.Information?.[0]?.Synonym;return c?.find(a=>k.test(a))??null}async function o(a){let b=await (0,d.Ay)(`https://webbook.nist.gov/cgi/cbook.cgi?Str3File=C${a.replace(/-/g,"")}`,{headers:{"User-Agent":"moleculens/1.0"}});if(!b.ok)return null;let c=await b.text();return m(c)?c:null}function p(a){return a.normalize("NFKD").replace(/[\u00AD\u2010-\u2015\u202F]/g,"-").replace(/[^\u0020-\u007F]/g,"").replace(/\s+/g," ").trim()}async function q(a){let b=p(a),c=await y(b);if(c||(c=await z(b))||(c=await A(b)))return c;throw Error(`No PubChem compound matches "${b}"`)}let r="https://search.rcsb.org/rcsbsearch/v2/query",s=/^[A-Za-z0-9]{4}$/,t={"Content-Type":"application/json",Accept:"application/json"};async function u(a){let b=a.trim();b.toLowerCase();let c=(...a)=>!1;if(s.test(b))return c("exact-match",b),b.toUpperCase();try{let a=`https://search.rcsb.org/rcsbsearch/v1/keyboard_autocomplete?term=${encodeURIComponent(b)}&target=entry&num_results=20`,e=await (0,d.Ay)(a,{headers:t}).then(a=>a.json()),f=e?.suggestions?.[0],g=(f?.identifier||f?.value||"").trim();if(s.test(g))return c("autocomplete",g),g.toUpperCase()}catch(a){c("autocomplete-error",a)}try{let a=await (0,d.Ay)(r,{method:"POST",headers:t,body:JSON.stringify({query:{type:"terminal",service:"full_text",parameters:{value:b}},return_type:"entry",request_options:{paginate:{start:0,rows:20},sort:[{sort_by:"score",direction:"desc"}]}})});if(!a.ok)throw Error(`RCSB returned ${a.status}`);let e=await a.text();if(!e.trim())throw Error("Empty response from RCSB");let f=JSON.parse(e),g=(f?.result_set??[]).filter(a=>s.test(a.identifier));if(g.length)return c("full_text",g.map(a=>a.identifier)),g[0].identifier.toUpperCase()}catch(a){c("full_text-error",a)}try{let a=(a,b)=>({query:{type:"terminal",service:"text",parameters:{attribute:a,operator:"contains_words",value:b}},return_type:"entry",request_options:{paginate:{start:0,rows:20},sort:[{sort_by:"score",direction:"desc"}]}});for(let e of["struct.title","rcsb_entry_container_identifiers.entry_id","rcsb_polymer_entity.pdbx_description","rcsb_uniprot_protein.name.value"]){let f=await (0,d.Ay)(r,{method:"POST",headers:t,body:JSON.stringify(a(e,b))});if(!f.ok)throw Error(`RCSB returned ${f.status}`);let g=await f.text();if(!g.trim())throw Error("Empty response from RCSB");let h=JSON.parse(g),i=(h?.result_set??[]).filter(a=>s.test(a.identifier));if(i.length)return i.sort((a,b)=>(b.score??0)-(a.score??0)),c("robust_text",i.map(a=>({id:a.identifier,score:a.score}))),i[0].identifier.toUpperCase()}}catch(a){c("robust_text-error",a)}try{let a=`https://www.rcsb.org/search/suggest/false/${encodeURIComponent(b)}`,e=(await (0,d.Ay)(a,{headers:{Accept:"application/json"}}).then(a=>a.text())).match(/[A-Za-z0-9]{4,6}/);if(e&&s.test(e[0]))return c("suggest",e[0]),e[0].toUpperCase()}catch(a){c("suggest-error",a)}throw Error(`No PDB entry matches "${a}"`)}async function v({prompt:a}){let b=await u(a),c=await (0,d.Ay)(`https://files.rcsb.org/download/${b}.pdb`).then(a=>a.text()),e=a,f={};try{let a=await (0,d.Ay)(`https://data.rcsb.org/rest/v1/core/entry/${b}`).then(a=>a.json());e=function(a){try{let b="",c=a?.struct_keywords?.pdbx_keywords||"",d=a?.struct?.title||"";if(c)b=c.split(",")[0].trim();else{let a=d.match(/^([^(]+?)(?:\s+FROM|$)/i);b=a?a[1].trim():d.split(/\s+/)[0]}let e=a?.rcsb_entity_source_organism?.[0],f=e?.ncbi_common_name||e?.ncbi_scientific_name,g=a?.rcsb_entry_info?.resolution_combined?.[0],h=b;return f&&(h+=` from ${f}`),g&&(h+=` (${g.toFixed(1)} \xc5)`),h}catch(b){return console.error("[PubChemService] Error generating macromolecule title:",b),a?.struct?.title||""}}(a),f=function(a){let b={};try{a?.struct?.title&&(b.full_description=a.struct.title),a?.struct?.title&&(b.structure_title=a.struct.title),a?.rcsb_entry_info?.resolution_combined?.[0]!==void 0&&(b.resolution=a.rcsb_entry_info.resolution_combined[0]),a?.rcsb_entry_info?.experimental_method&&(b.experimental_method=a.rcsb_entry_info.experimental_method),a?.rcsb_entry_info?.molecular_weight!==void 0&&(b.formula_weight=a.rcsb_entry_info.molecular_weight),a?.rcsb_entry_info?.deposited_polymer_entity_instance_count!==void 0&&(b.chain_count=a.rcsb_entry_info.deposited_polymer_entity_instance_count),a?.rcsb_primary_citation?.year!==void 0&&(b.publication_year=a.rcsb_primary_citation.year),a?.rcsb_primary_citation?.pdbx_database_id_doi&&(b.publication_doi=a.rcsb_primary_citation.pdbx_database_id_doi),b.keywords=a?.struct_keywords?.pdbx_keywords?.split(",").map(a=>a.trim())||[];let c=a?.rcsb_entity_source_organism?.[0];c?.ncbi_scientific_name&&(b.organism_scientific=c.ncbi_scientific_name),c?.ncbi_common_name&&(b.organism_common=c.ncbi_common_name),a?.rcsb_accession_info?.initial_release_date&&(b.deposition_date=a.rcsb_accession_info.initial_release_date)}catch(a){console.error("[PubChemService] Error extracting RCSB info:",a)}return b}(a)}catch(a){console.error("[PubChemService] Error fetching RCSB metadata:",a)}return{pdb_data:c,title:e,pdb_id:b,info:f}}async function w(a,b){if("macromolecule"===b){let{pdb_data:b,title:c,info:d}=await v({prompt:a});return{pdb_data:b,name:c??a,cid:0,formula:"",info:d,sdf:""}}let c=await q(a),e="";{let b=await (0,d.Ay)(`${j}/compound/cid/${c}/SDF?record_type=3d`);if(b.ok){let c=await b.text();m(c)?e=c:console.warn(`PubChem returned planar coordinates for ${a}; will try NIST.`)}}if(!e){let a=await n(c);if(a){let b=await o(a);b&&m(b)&&(e=b)}}if(!e){let a=await l(c);a&&(e=a)}if(!e){let a=await B(c);if(a){let b=await l(a);b&&(e=b)}}if(!e){let b=await l(p(a));b&&(e=b)}if(!e){let a=`${j}/compound/cid/${c}/record/SDF?record_type=3d&response_type=save`,b=await (0,d.Ay)(a,{headers:{"User-Agent":"moleculens/1.0"}});b.ok&&(e=await b.text())}if(!e){let b=(await (0,d.Ay)(`${j}/compound/cid/${c}/SDF?record_type=2d`)).ok?await (0,d.Ay)(`${j}/compound/cid/${c}/SDF?record_type=2d`):await (0,d.Ay)(`${j}/compound/cid/${c}/SDF`);b.ok&&(m(e=await b.text())||console.warn(`[PubChemService] No 3D structure found for ${a}. Falling back to 2D representation.`))}if(!e)throw Error(`Unable to obtain SDF for “${a}” (CID ${c}).`);let f="";try{let a=await (0,d.Ay)(`${j}/compound/cid/${c}/property/MolecularFormula/JSON`);a.ok&&(f=(await a.json()).PropertyTable.Properties[0].MolecularFormula??"")}catch{}let g={formula:f};try{let a=await (0,d.Ay)(`${j}/compound/cid/${c}/record/JSON`);a.ok&&(g={...g,...function(a){let b={},c=a?.PC_Compounds?.[0],d=c?.props||[],e=a=>{for(let b of d)if(b?.urn?.label===a)return b?.value?.sval??b?.value?.fval??b?.value?.ival},f=e("Molecular Formula");"string"==typeof f&&(b.formula=f);let g=e("Molecular Weight");void 0!==g&&(b.formula_weight=parseFloat(String(g)));let h=e("Canonical SMILES");"string"==typeof h&&(b.canonical_smiles=h);let i=e("Isomeric SMILES");"string"==typeof i&&(b.isomeric_smiles=i);let j=e("InChI");"string"==typeof j&&(b.inchi=j);let k=e("InChIKey");"string"==typeof k&&(b.inchikey=k);let l=e("Formal Charge");return void 0!==l&&(b.formal_charge=parseInt(String(l),10)),b.synonyms=d.filter(a=>a?.urn?.label==="Synonym").map(a=>a?.value?.sval).filter(a=>!!a),b}(await a.json())})}catch{}return{pdb_data:"",sdf:e,name:a,cid:c,formula:f,info:g}}async function x(a){try{let b=h().join(process.cwd(),"output.html"),d=f().readFileSync(b,"utf8"),e=a=>a.replace(/`/g,"\\`"),g=a.sdf&&a.sdf.trim().length>0,i=a.pdb_data&&a.pdb_data.trim().length>0;if(g&&a.sdf){let b=e(a.sdf);d=(d=d.replace(/const\s+sdfData\s*=\s*`[\s\S]*?`;/m,`const sdfData = \`${b}\`;`)).replace(/const\s+moleculeType\s*=\s*'[^']*';/m,"const moleculeType = 'sdf';")}if(i&&a.pdb_data){let b=e(a.pdb_data);d=d.replace(/const\s+pdbData\s*=\s*`[\s\S]*?`;/m,`const pdbData = \`${b}\`;`),g||(d=d.replace(/const\s+moleculeType\s*=\s*'[^']*';/m,"const moleculeType = 'pdb';"))}if(i){let b=e(a.pdb_data);d=d.replace(/const\s+pdbData\s*=\s*`[\s\S]*?`;/m,`const pdbData = \`${b}\`;`),g||(d=d.replace(/const\s+moleculeType\s*=\s*'[^']*';/m,"const moleculeType = 'pdb';"))}try{let{generatePresentationScript:b}=await Promise.all([c.e(482),c.e(77),c.e(458)]).then(c.bind(c,57077)),e=await b(a),f=a=>{if("string"==typeof a)return`'${a.replace(/'/g,"\\'").replace(/\n/g,"\\n")}'`;if(Array.isArray(a))return`[${a.map(a=>f(a)).join(", ")}]`;if("object"==typeof a&&null!==a){let b=Object.entries(a).map(([a,b])=>`${a}: ${f(b)}`);return`{${b.join(", ")}}`}return String(a)},g=`const scriptData = ${f(e)};`;d=d.replace(/const\s+scriptData\s*=\s*\{[\s\S]*?\};/m,g)}catch(a){console.warn("Error generating presentation script:",a)}return a.name&&(d=(d=d.replace(/<title>[\s\S]*?<\/title>/i,`<title>${a.name}</title>`)).replace(/"title"\s*:\s*"[^"]*"/,`"title": "${a.name}"`)),a.cid&&(d=d.replace(/data-cid="[^"]*"/,`data-cid="${a.cid}"`)),d}catch(b){return console.error("[moleculeHTML] Failed to build HTML from template:",b),`<div class="molecule" data-cid="${a.cid}"></div>`}}async function y(a){let b=await (0,d.Ay)(`${j}/compound/name/${encodeURIComponent(a)}/cids/JSON`);if(!b.ok)return null;let c=await b.json();return c?.IdentifierList?.CID?.[0]??null}async function z(a){let b=`https://pubchem.ncbi.nlm.nih.gov/rest/autocomplete/compound/${encodeURIComponent(a)}/JSON?limit=20`,c=await (0,d.Ay)(b);if(!c.ok)return null;for(let a of(await c.json())?.dictionary_terms?.compound??[]){let b=await y(a);if(b)return b}return null}async function A(a){let b=[...(await (0,d.Ay)(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pccompound&retmax=200&term=${encodeURIComponent(a)}`).then(a=>a.text())).matchAll(/<Id>(\d+)<\/Id>/g)].map(a=>a[1]);if(!b.length)return null;let c=await (0,d.Ay)(`${j}/compound/cid/${b.join(",")}/property/SubstanceCount/JSON`).then(a=>a.json()),e=c.InformationList?.Information?.sort((a,b)=>(b.SubstanceCount??0)-(a.SubstanceCount??0))[0];return e?.CID??null}async function B(a){try{let b=await (0,d.Ay)(`${j}/compound/cid/${a}/property/CanonicalSMILES,IsomericSMILES,InChI/JSON`);if(!b.ok)return null;let c=(await b.json())?.PropertyTable?.Properties?.[0]??{};return c.CanonicalSMILES||c.IsomericSMILES||c.InChI||null}catch{return null}}async function C(a,b){if("macromolecule"===b){let{pdb_data:b,title:c,info:d,pdb_id:e}=await v({prompt:a});return{pdb_data:b,name:c??a,cid:0,formula:"",info:d,sdf:"",pdb_id:e}}try{let c=await (0,i.R1)(a);if(!c)throw Error(`Molecule not found: ${a}`);let d="";if(c.sdf_data)try{d=await (0,i.Gq)(c.sdf_data)}catch(c){return console.warn("Failed to convert SDF to PDB:",c),await w(a,b)}return{pdb_data:d,sdf:c.sdf_data||"",name:c.name,cid:c.cid||0,formula:c.formula||"",info:(0,i.U1)(c)}}catch(c){return console.warn("Enhanced fetch failed, falling back to original method:",c),await w(a,b)}}}};